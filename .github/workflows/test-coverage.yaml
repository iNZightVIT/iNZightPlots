on: [push, pull_request]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: windows-latest, r: "release" }
          - { os: macOS-latest, r: "release" }
          - { os: macOS-latest, r: "devel" }
          - {
              os: ubuntu-22.04,
              r: "release",
              rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest",
            }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.config.os }}-${{ matrix.config.r }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install libcurl on Ubuntu R-devel
        if: runner.os == 'Linux' && matrix.config.r == 'devel'
        run: sudo apt-get install -y libcurl4-openssl-dev

      - name: Install dependencies
        env:
          OS_TYPE: ${{ runner.os }}
        run: Rscript ./.github/install_deps.R
        shell: bash

      - name: Test coverage
        run: Rscript -e "covr::codecov()"
        shell: bash

      # - name: Test coverage
      #   continue-on-error: true
      #   uses: nick-fields/retry@v3
      #   with:
      #     timeout_minutes: 10
      #     max_attempts: 5
      #     command: Rscript -e "covr::codecov()"
