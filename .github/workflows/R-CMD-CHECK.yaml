on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: windows-latest, r: "oldrel" }
          - { os: windows-latest, r: "release" }
          # - { os: windows-latest, r: "devel" }
          - { os: macOS-latest, r: "release" }
          - { os: ubuntu-latest, r: "release" }
          - { os: ubuntu-latest, r: "devel" }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      _R_CHECK_DONTTEST_EXAMPLES_: false
      _R_CHECK_S3_METHODS_SHOW_POSSIBLE_ISSUES_: true

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.config.os }}-${{ matrix.config.r }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          if (getRversion() >= numeric_version('4.2'))
            install.packages('processx', type = 'source')
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ matrix.config.os }}-r-${{ matrix.config.r }}-1-

      # - name: Install system dependencies
      #   if: runner.os == 'Linux'
      #   env:
      #     RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      #   run: |
      #     Rscript -e "install.packages('pak')"
      #     sysreqs=$(Rscript -e "cat(pak::pkg_sysreqs('.'))")
      #     sudo -s eval "$sysreqs"

      - name: Install libcurl on Ubuntu R-devel
        if: runner.os == 'Linux' && matrix.config.r == 'devel'
        run: sudo apt-get install -y libcurl4-openssl-dev

      - name: Install dependencies
        env:
          OS_TYPE: ${{ runner.os }}
        run: Rscript ./.github/install_deps.R
        shell: bash

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
